name: infracost with slack

on:
  push:
    branches:
      - main
    paths:
      - terraform/**
  pull_request:
    branches:
      - main
    paths:
      - terraform/**
  workflow_dispatch:

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE }}
  AWS_REGION: us-west-2

jobs:
  terraform-plan:
    name: "Terraform Plan"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform init
        id: init
        run: terraform init -backend-config="bucket=$BUCKET_TF_STATE"

      - name: Terraform format
        id: fmt
        run: terraform fmt -check

      - name: Terraform validate
        id: validate
        run: terraform validate

      - name: Generate Terraform plan JSON
        run: |
          terraform plan -out=tfplan.binary
          terraform show -json tfplan.binary > tfplan.json

      - name: Save Terraform plan
        uses: actions/upload-artifact@v3
        with:
          name: tfplan-json
          path: terraform/tfplan.json

  Estimate-Cost:
    name: "Estimate Cost and Slack Notification"
    needs: terraform-plan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Setup Infracost
        uses: infracost/actions/setup@v2
        with:
          api-key: ${{ secrets.INFRACOST_API_KEY }}

      - name: Run Infracost breakdown
        run: infracost breakdown --path=./terraform --format json --out-file infracost-out.json

      - name: Inspect Infracost output
        run: cat infracost-out.json

      - name: Set cost estimates as environment variables
        id: set_costs
        run: |
          HOURLY_COST=$(jq -r '.projects[].breakdown.totalHourlyCost // 0' infracost-out.json)
          MONTHLY_COST=$(jq -r '.projects[].breakdown.totalMonthlyCost // 0' infracost-out.json)
          
          DAILY_COST=$(echo "$HOURLY_COST * 24" | bc)
          YEARLY_COST=$(echo "$MONTHLY_COST * 12" | bc)

          HOURLY_COST=${HOURLY_COST:-"0"}
          MONTHLY_COST=${MONTHLY_COST:-"0"}
          DAILY_COST=${DAILY_COST:-"0"}
          YEARLY_COST=${YEARLY_COST:-"0"}

          echo "HOURLY_COST=$HOURLY_COST" >> $GITHUB_ENV
          echo "DAILY_COST=$DAILY_COST" >> $GITHUB_ENV
          echo "MONTHLY_COST=$MONTHLY_COST" >> $GITHUB_ENV
          echo "YEARLY_COST=$YEARLY_COST" >> $GITHUB_ENV

      - name: Post Infracost result to PR
        uses: infracost/actions/comment@v1
        with:
          path: infracost-out.json

      - name: Notify Slack about cost estimation
        if: success()
        uses: wearerequired/slack-messaging-action@v2
        with:
          bot_token: ${{ secrets.SLACK_BOT_TOKEN }}
          channel: infrastructure-budgets
          payload: >-
            {
              "icon_emoji": ":moneybag:",
              "text": "Cost estimate summary:\n\n*Hourly Cost:* ${{ env.HOURLY_COST }} USD\n*Daily Cost:* ${{ env.DAILY_COST }} USD\n*Monthly Cost:* ${{ env.MONTHLY_COST }} USD\n*Yearly Cost:* ${{ env.YEARLY_COST }} USD"
            }

  terraform-apply:
    name: "Terraform Apply"
    needs: Estimate-Cost
    runs-on: ubuntu-latest
    if: needs.Estimate-Cost.outputs.should_apply == 'false'
    
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform init
        id: init
        run: terraform init -backend-config="bucket=$BUCKET_TF_STATE"

      - name: Terraform apply
        run: terraform apply -auto-approve
